{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","monster","react_default","a","createElement","className","alt","src","concat","id","name","email","CardList","props","monsters","map","card_component_Card","key","SearchBox","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","_super","call","e","setState","searchField","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredMonsters","filter","toLowerCase","includes","trim","search_box_component_SearchBox","card_list_component_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"2SAIaA,eAAO,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,UAAUC,IAAG,wBAAAC,OAA0BP,EAAQQ,GAAlC,4BACtBP,EAAAC,EAAAC,cAAA,UAAKH,EAAQS,MACbR,EAAAC,EAAAC,cAAA,SAAIH,EAAQU,UCLPC,EAAW,SAACC,GAErB,OAGIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEPQ,EAAMC,SAASC,IAAI,SAAAd,GAAO,OACtBC,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAKhB,EAAQQ,GAAIR,QAASA,QCTvCiB,SAAY,SAAAlB,GAAA,IAAEmB,EAAFnB,EAAEmB,YAAYC,EAAdpB,EAAcoB,aAAd,OACrBlB,EAAAC,EAAAC,cAAA,SACAC,UAAU,aACVgB,KAAO,SACPF,YAAeA,EACfG,SAAYF,MCgDDG,2DA/Cb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAI,EAAAC,KAAAF,OAoBFP,aAAe,SAACU,GACdN,EAAKO,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAnBpCV,EAAKW,MAAQ,CACXrB,SAAU,GACVkB,YAAY,IALFR,uDAad,WAAoB,IAAAY,EAAAT,KAClBU,MAAM,8CACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKL,SAAS,CAAEjB,SAAU2B,4BAU7C,WACE,IAAAC,EAA+Bf,KAAKQ,MAA7BrB,EAAP4B,EAAO5B,SAASkB,EAAhBU,EAAgBV,YACVW,EAAmB7B,EAAS8B,OAAO,SAAA3C,GAAO,OAAIA,EAAQS,KAAKmC,cAAcC,SAASd,EAAYa,cAAcE,UAElH,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC4C,EAAD,CACA7B,YAAa,kBACbC,aAAcO,KAAKP,eAGjBlB,EAAAC,EAAAC,cAAC6C,EAAD,CAAUnC,SAAU6B,YAvCVO,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAxB,EAAA,GAAAQ,KAAAgB,EAAAC,KAAA,UAAqBjB,KAAK,SAAAtC,GAAiD,IAA9CwD,EAA8CxD,EAA9CwD,OAAQC,EAAsCzD,EAAtCyD,OAAQC,EAA8B1D,EAA9B0D,OAAQC,EAAsB3D,EAAtB2D,OAAQC,EAAc5D,EAAd4D,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACP5D,EAAAC,EAAAC,cAACF,EAAAC,EAAM4D,WAAP,KACE7D,EAAAC,EAAAC,cAAC4D,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.8bd1cae3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.style.css'\r\n\r\n\r\nexport const Card = ({ monster }) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${monster.id}?set=set2&size=120x120`}/>\r\n        <h3>{monster.name}</h3>\r\n        <p>{monster.email}</p>\r\n    </div >\r\n)\r\n","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.component'\r\nexport const CardList = (props) => {\r\n\r\n    return (\r\n        // A very important concept of props is children\r\n        //children is anything passed in between the component opening and closing tags \r\n        <div className='card-list'>\r\n            {\r\n                props.monsters.map(monster =>\r\n                    <Card key={monster.id} monster={monster} />\r\n                )\r\n            }\r\n        </div >\r\n    )\r\n}","import React from 'react'\r\nimport './search-box.styles.css'\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input\r\n    className=\"search-box\"\r\n    type = \"search\"\r\n    placeholder = {placeholder}\r\n    onChange = {handleChange}\r\n    />\r\n)\r\n\r\n","// import React from 'react';\nimport React,{Component} from 'react'\nimport { CardList } from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component.jsx'\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField:''\n    }\n\n    // bind the function to the constructor state\n    // this.handleChange = this.handleChange.bind(this)\n  }\n  /* LIFECYCLE METHODS */\n  // mounting is when react puts our code on the page for the first time\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n\n  }\n  // when using native function you have to bind it to the app state\n  // so always use arrow function for class objecta \n  handleChange = (e) => {\n    this.setState({searchField:e.target.value})\n  }\n  \n\n  render() {\n    const {monsters,searchField} = this.state\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase().trim()))\n\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n      placeholder={\"search monsters\"}\n      handleChange={this.handleChange}\n       />\n\n        <CardList monsters={filteredMonsters} />\n        {/* {\n          filteredMonsterv\n        } */}\n      </div >\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}